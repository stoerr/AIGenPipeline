[
  {
    "similarity": 0.9128468556421312,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/RegenerationCheckStrategy.java.needsRegeneration.descr",
    "content1": "boolean needsRegeneration(@Nonnull net.stoerr.ai.aigenpipeline.framework.task.AIInOut output, @Nonnull java.util.List<net.stoerr.ai.aigenpipeline.framework.task.AIInOut> inputs, @Nonnull net.stoerr.ai.aigenpipeline.framework.task.WritingStrategy writingStrategy, @Nonnull java.util.List<java.lang.String> inputVersions)\nThis method determines whether the output file needs to be regenerated based on the input files, writing strategy, and input versions. It checks various conditions such as file existence, modification time, and version markers to make the regeneration decision. The algorithm involves comparing file timestamps and input versions to determine if regeneration is necessary. This method processes output and input files, as well as input versions, and relies on the provided writing strategy for version marker handling.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/RegenerationCheckStrategy.java.VersionMarkerRegenerationCheckStrategy.descr",
    "content2": "boolean VersionMarkerRegenerationCheckStrategy.needsRegeneration(@Nonnull net.stoerr.ai.aigenpipeline.framework.task.AIInOut output, @Nonnull java.util.List<net.stoerr.ai.aigenpipeline.framework.task.AIInOut> inputs, @Nonnull net.stoerr.ai.aigenpipeline.framework.task.WritingStrategy writingStrategy, @Nonnull java.util.List<java.lang.String> inputVersions)\nThis method determines if the output file needs to be regenerated based on version markers. It compares the input versions recorded in the output file's version marker with the current input versions to decide on regeneration. The algorithm involves checking for differences in input versions to trigger regeneration. This method processes output and input files and relies on the provided writing strategy for version marker handling."
  },
  {
    "similarity": 0.9093596199032645,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInput.descr",
    "content1": "AIGenerationTask addInput(AIInOut input)\nAdds an input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addOptionalInput.descr",
    "content2": "AIGenerationTask addOptionalInput(AIInOut input)\nAdds an optional input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.8914783117372288,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputFile.descr",
    "content1": "AIGenerationTask addInputFile(File file)\nAdds an input file to the task. If the file exists, it is added to the list of input files for the task. This method takes a File object as a parameter and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addOptionalInputFile.descr",
    "content2": "AIGenerationTask addOptionalInputFile(File file)\nAdds an optional input file to the task. If the file exists, it is added to the list of input files for the task. This method takes a File object as a parameter and returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.8530470119565317,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.assistantMsg.descr",
    "content1": "AIChatBuilder assistantMsg(String text)\nAdds an assistant message to the chat. This method appends an assistant-generated message to the chat conversation. Assistant messages are responses generated by the AI model or chatbot to interact with the user. These messages provide answers, suggestions, or guidance within the chat context. Incorporating assistant messages facilitates natural and informative communication in the chat interaction.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/CopyPseudoAIChatBuilderImpl.java.assistantMsg.descr",
    "content2": "AIChatBuilder assistantMsg(String text)\nThis method adds the assistant message text to the input of the AI chat builder. It appends the uncluttered version of the text to the existing inputs."
  },
  {
    "similarity": 0.8418774014743773,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/FileLookupHelper.java.filesContaining.descr",
    "content1": "List<File> filesContaining(String relpathDirectory, String filePathPattern, Pattern pattern, boolean recursive)\nThis method searches for files in the specified directory that contain a specific pattern in their content. It returns a list of files that match the given file path pattern and contain the specified regex pattern in their content. The method reads the content of each file and applies the regex pattern to determine if it matches. It skips files that exceed a certain size or are identified as binary files. The method relies on the java.util.regex.Pattern class for pattern matching.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/FileLookupHelper.java.files.descr",
    "content2": "List<File> files(String relpathDirectory, String filePathPattern, boolean recursive)\nThis method retrieves a list of files based on the provided directory path, file path pattern, and recursion flag. It searches for files matching the given pattern in the specified directory and its subdirectories. The method returns a list of File objects that match the criteria. It utilizes the PathMatcher to match file paths based on the provided pattern. The method has dependencies on the java.io.File, java.nio.file.Path, and java.nio.file.PathMatcher classes."
  },
  {
    "similarity": 0.8402933472007568,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIInOut.java.of(File file).descr",
    "content1": "AIInOut of(File file)\nThis method creates an AIInOut instance that reads from the specified file. It returns a new AIFileInOut instance initialized with the provided file.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIInOut.java.of(Path path).descr",
    "content2": "AIInOut of(Path path)\nThis method creates an AIInOut instance that reads from the specified file path. It returns a new AIFileInOut instance initialized with the file corresponding to the provided path."
  },
  {
    "similarity": 0.8393687281898029,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.setOutput.descr",
    "content1": "AIGenerationTask setOutput(AIInOut output)\nSets the output file for the task. It specifies the file where the AI-generated output will be written. This method takes an AIInOut object representing the output file and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.setOutputFile.descr",
    "content2": "AIGenerationTask setOutputFile(File file)\nSets the output file for the task. It specifies the file where the AI-generated output will be written. This method takes a File object representing the output file and returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.8380722398839131,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/RegenerationCheckStrategy.java.needsRegeneration.descr",
    "content1": "boolean needsRegeneration(@Nonnull net.stoerr.ai.aigenpipeline.framework.task.AIInOut output, @Nonnull java.util.List<net.stoerr.ai.aigenpipeline.framework.task.AIInOut> inputs, @Nonnull net.stoerr.ai.aigenpipeline.framework.task.WritingStrategy writingStrategy, @Nonnull java.util.List<java.lang.String> inputVersions)\nThis method determines whether the output file needs to be regenerated based on the input files, writing strategy, and input versions. It checks various conditions such as file existence, modification time, and version markers to make the regeneration decision. The algorithm involves comparing file timestamps and input versions to determine if regeneration is necessary. This method processes output and input files, as well as input versions, and relies on the provided writing strategy for version marker handling.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/RegenerationCheckStrategy.java.IF_OLDER.descr",
    "content2": "boolean IF_OLDER(@Nonnull net.stoerr.ai.aigenpipeline.framework.task.AIInOut output, @Nonnull java.util.List<net.stoerr.ai.aigenpipeline.framework.task.AIInOut> inputs, @Nonnull net.stoerr.ai.aigenpipeline.framework.task.WritingStrategy writingStrategy, @Nonnull java.util.List<java.lang.String> inputVersions)\nThis method checks if the output file needs to be regenerated by comparing the modification timestamps of the output file and input files. It evaluates whether the output file is older than any of the input files, indicating a need for regeneration. The algorithm involves iterating over input files and comparing their timestamps with the output file's timestamp. This method processes output and input files and relies on the provided writing strategy for handling file timestamps."
  },
  {
    "similarity": 0.830339071744579,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputFile.descr",
    "content1": "AIGenerationTask addInputFile(File file)\nAdds an input file to the task. If the file exists, it is added to the list of input files for the task. This method takes a File object as a parameter and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputFiles.descr",
    "content2": "AIGenerationTask addInputFiles(List<File> files)\nAdds multiple input files to the task. It iterates over the list of File objects and adds each file to the list of input files for the task. This method returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.8298293590252928,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInput.descr",
    "content1": "AIGenerationTask addInput(AIInOut input)\nAdds an input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputs.descr",
    "content2": "AIGenerationTask addInputs(List<AIInOut> inputs)\nAdds multiple AIInOut objects as inputs to the task. It iterates over the list of AIInOut objects and adds each input to the list of input files for the task. This method returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.82405114231583,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addOptionalInput.descr",
    "content1": "AIGenerationTask addOptionalInput(AIInOut input)\nAdds an optional input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addOptionalInputFile.descr",
    "content2": "AIGenerationTask addOptionalInputFile(File file)\nAdds an optional input file to the task. If the file exists, it is added to the list of input files for the task. This method takes a File object as a parameter and returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.8237494948717475,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/OpenAIChatBuilderImpl.java.toJson.descr",
    "content1": "String toJson()\nThis method converts the chat completion request object into a JSON string representation based on the API endpoint being used (OpenAI or Anthropic Claude). It handles the conversion of system prompts for Claude and filters out messages based on their roles. The method utilizes the Gson library for JSON serialization.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.toJson.descr",
    "content2": "String toJson()\nConverts the chat completion request to a JSON string. This method serializes the chat completion request into a JSON-formatted string representation. Converting the request to JSON format enables data interchange and compatibility with various systems and services. The JSON output encapsulates the chat parameters and content in a structured format for seamless transmission and processing."
  },
  {
    "similarity": 0.8139312906477276,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInput.descr",
    "content1": "AIGenerationTask addInput(AIInOut input)\nAdds an input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputFile.descr",
    "content2": "AIGenerationTask addInputFile(File file)\nAdds an input file to the task. If the file exists, it is added to the list of input files for the task. This method takes a File object as a parameter and returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.809622136620688,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.setRegenerationCheckStrategy.descr",
    "content1": "AIGenerationTask setRegenerationCheckStrategy(RegenerationCheckStrategy strategy)\nSets the strategy for checking if regeneration is required. It defines the method to determine whether the AI generation task needs to be rerun based on input file versions and other criteria. This method takes a RegenerationCheckStrategy object as a parameter and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.setWritingStrategy.descr",
    "content2": "AIGenerationTask setWritingStrategy(WritingStrategy strategy)\nSets the strategy for writing the output file. It defines how the AI-generated output should be written to the output file. This method takes a WritingStrategy object as a parameter and returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.808709774802646,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.systemMsg.descr",
    "content1": "AIChatBuilder systemMsg(String text)\nAdds a system message to the chat. This method includes a system-generated message in the chat interaction. System messages can provide context, instructions, or additional information to the user during the conversation. Incorporating system messages enhances the overall user experience and ensures effective communication within the chat environment.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.userMsg.descr",
    "content2": "AIChatBuilder userMsg(String text)\nAdds a user message to the chat. This method inserts a user-generated message into the chat dialogue. User messages represent inputs or queries from the chat participant and drive the conversational flow. Including user messages enables dynamic interactions and personalized responses based on user input. User messages are fundamental for engaging and interactive chat experiences."
  },
  {
    "similarity": 0.8001361362682964,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/OpenAIChatBuilderImpl.java.execute.descr",
    "content1": "String execute()\nThis method executes the chat completion request by sending a HTTP POST request to the specified URL with the JSON representation of the chat completion request. It handles different API endpoints based on the URL provided, sets appropriate headers including authorization, organization ID, and content type, and processes the response to extract the completed chat content. The method relies on the HttpClient class for making HTTP requests and the Gson library for JSON serialization and deserialization.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.execute.descr",
    "content2": "String execute()\nExecutes the chat completion request and returns the response. This method triggers the execution of the chat completion request and retrieves the resulting response. Executing the request initiates the chat processing pipeline, which generates and delivers the chat completion output. The method returns the response generated by the chat completion service, reflecting the AI-generated conversation or interaction."
  },
  {
    "similarity": 0.799127303196063,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputFile.descr",
    "content1": "AIGenerationTask addInputFile(File file)\nAdds an input file to the task. If the file exists, it is added to the list of input files for the task. This method takes a File object as a parameter and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.setOutputFile.descr",
    "content2": "AIGenerationTask setOutputFile(File file)\nSets the output file for the task. It specifies the file where the AI-generated output will be written. This method takes a File object representing the output file and returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.7981437391246242,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/CopyPseudoAIChatBuilderImpl.java.model.descr",
    "content1": "AIChatBuilder model(String model)\nThis method sets the model for the AI chat builder. It only supports the 'copy' model. If a different model is provided, an IllegalArgumentException is thrown.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.model.descr",
    "content2": "AIChatBuilder model(String model)\nSets the AI model to be used for the chat completion. This method selects the AI model to be employed during the chat completion process. The chosen model influences the language generation, response accuracy, and overall conversational quality. Selecting the appropriate AI model is essential for tailoring the chat interactions to specific use cases and optimizing performance."
  },
  {
    "similarity": 0.7912343947965476,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputs.descr",
    "content1": "AIGenerationTask addInputs(List<AIInOut> inputs)\nAdds multiple AIInOut objects as inputs to the task. It iterates over the list of AIInOut objects and adds each input to the list of input files for the task. This method returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputFiles.descr",
    "content2": "AIGenerationTask addInputFiles(List<File> files)\nAdds multiple input files to the task. It iterates over the list of File objects and adds each file to the list of input files for the task. This method returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.781091530783031,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIInOut.java.of(File file).descr",
    "content1": "AIInOut of(File file)\nThis method creates an AIInOut instance that reads from the specified file. It returns a new AIFileInOut instance initialized with the provided file.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIInOut.java.of(InputStream in).descr",
    "content2": "AIInOut of(InputStream in)\nThis method creates an AIInOut instance that reads from the provided input stream. It returns a new AIStreamInOut instance initialized with the input stream."
  },
  {
    "similarity": 0.7793368444922831,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/RegenerationCheckStrategy.java.IF_OLDER.descr",
    "content1": "boolean IF_OLDER(@Nonnull net.stoerr.ai.aigenpipeline.framework.task.AIInOut output, @Nonnull java.util.List<net.stoerr.ai.aigenpipeline.framework.task.AIInOut> inputs, @Nonnull net.stoerr.ai.aigenpipeline.framework.task.WritingStrategy writingStrategy, @Nonnull java.util.List<java.lang.String> inputVersions)\nThis method checks if the output file needs to be regenerated by comparing the modification timestamps of the output file and input files. It evaluates whether the output file is older than any of the input files, indicating a need for regeneration. The algorithm involves iterating over input files and comparing their timestamps with the output file's timestamp. This method processes output and input files and relies on the provided writing strategy for handling file timestamps.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/RegenerationCheckStrategy.java.VersionMarkerRegenerationCheckStrategy.descr",
    "content2": "boolean VersionMarkerRegenerationCheckStrategy.needsRegeneration(@Nonnull net.stoerr.ai.aigenpipeline.framework.task.AIInOut output, @Nonnull java.util.List<net.stoerr.ai.aigenpipeline.framework.task.AIInOut> inputs, @Nonnull net.stoerr.ai.aigenpipeline.framework.task.WritingStrategy writingStrategy, @Nonnull java.util.List<java.lang.String> inputVersions)\nThis method determines if the output file needs to be regenerated based on version markers. It compares the input versions recorded in the output file's version marker with the current input versions to decide on regeneration. The algorithm involves checking for differences in input versions to trigger regeneration. This method processes output and input files and relies on the provided writing strategy for version marker handling."
  },
  {
    "similarity": 0.7737158983405855,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.assistantMsg.descr",
    "content1": "AIChatBuilder assistantMsg(String text)\nAdds an assistant message to the chat. This method appends an assistant-generated message to the chat conversation. Assistant messages are responses generated by the AI model or chatbot to interact with the user. These messages provide answers, suggestions, or guidance within the chat context. Incorporating assistant messages facilitates natural and informative communication in the chat interaction.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.userMsg.descr",
    "content2": "AIChatBuilder userMsg(String text)\nAdds a user message to the chat. This method inserts a user-generated message into the chat dialogue. User messages represent inputs or queries from the chat participant and drive the conversational flow. Including user messages enables dynamic interactions and personalized responses based on user input. User messages are fundamental for engaging and interactive chat experiences."
  },
  {
    "similarity": 0.7689590246237861,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.systemMsg.descr",
    "content1": "AIChatBuilder systemMsg(String text)\nAdds a system message to the chat. This method includes a system-generated message in the chat interaction. System messages can provide context, instructions, or additional information to the user during the conversation. Incorporating system messages enhances the overall user experience and ensures effective communication within the chat environment.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.assistantMsg.descr",
    "content2": "AIChatBuilder assistantMsg(String text)\nAdds an assistant message to the chat. This method appends an assistant-generated message to the chat conversation. Assistant messages are responses generated by the AI model or chatbot to interact with the user. These messages provide answers, suggestions, or guidance within the chat context. Incorporating assistant messages facilitates natural and informative communication in the chat interaction."
  },
  {
    "similarity": 0.7685499408988835,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/OpenAIChatBuilderImpl.java.isOpenAI.descr",
    "content1": "boolean isOpenAI()\nThis method determines if the current URL corresponds to the OpenAI API endpoint. It inspects the URL string to identify the API endpoint and returns a boolean value indicating whether the endpoint is OpenAI. This check is essential for differentiating between OpenAI and Anthropic Claude API behaviors during chat completion request execution.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/OpenAIChatBuilderImpl.java.isClaude.descr",
    "content2": "boolean isClaude()\nThis method checks if the current URL corresponds to the Anthropic Claude API endpoint. It examines the URL string to identify the API endpoint and returns a boolean value indicating whether the endpoint is Anthropic Claude. This check is crucial for handling API-specific logic and headers during chat completion request execution."
  },
  {
    "similarity": 0.7586190271527041,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInput.descr",
    "content1": "AIGenerationTask addInput(AIInOut input)\nAdds an input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.setOutput.descr",
    "content2": "AIGenerationTask setOutput(AIInOut output)\nSets the output file for the task. It specifies the file where the AI-generated output will be written. This method takes an AIInOut object representing the output file and returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.7569053007067269,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.toJson.descr",
    "content1": "String toJson()\nConverts the chat completion request to a JSON string. This method serializes the chat completion request into a JSON-formatted string representation. Converting the request to JSON format enables data interchange and compatibility with various systems and services. The JSON output encapsulates the chat parameters and content in a structured format for seamless transmission and processing.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/CopyPseudoAIChatBuilderImpl.java.toJson.descr",
    "content2": "String toJson()\nThis method converts all the inputs of the AI chat builder to a JSON string."
  },
  {
    "similarity": 0.7567009897836928,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.maxTokens.descr",
    "content1": "AIGenerationTask maxTokens(Integer maxTokens)\nSets the maximum number of tokens for the AI chat. This method takes an Integer parameter representing the maximum number of tokens and sets it for the current AIGenerationTask object. It returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.maxTokens.descr",
    "content2": "AIChatBuilder maxTokens(int maxTokens)\nSets the maximum number of tokens the completion can use. This method specifies the maximum number of tokens that the chat completion process is allowed to utilize. Controlling the token limit helps manage the length and complexity of the generated chat responses. Setting an appropriate token limit is crucial for balancing response quality and resource consumption."
  },
  {
    "similarity": 0.7554327524098724,
    "id1": "aigenpipeline-commandline/src/main/java/net/stoerr/ai/aigenpipeline/commandline/AIDepDiagram.java.idForInOut.descr",
    "content1": "String idForInOut(AIInOut inout)\nGenerates a unique ID for the given AIInOut object based on the absolute file path. It ensures that each file has a distinct identifier in the dependency diagram by mapping file paths to IDs and handling ID generation for new files. This method is crucial for establishing connections between input and output nodes in the dependency graph.",
    "id2": "aigenpipeline-commandline/src/main/java/net/stoerr/ai/aigenpipeline/commandline/AIDepDiagram.java.labelForInOut.descr",
    "content2": "String labelForInOut(AIInOut inOut)\nGenerates a label for the given AIInOut object based on the file path relative to the root directory. It calculates the relative path of the file associated with the AIInOut object compared to the root directory. This method is used to provide human-readable labels for nodes in the dependency diagram."
  },
  {
    "similarity": 0.7535029181978787,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/FileLookupHelper.java.javaMdFile.descr",
    "content1": "File javaMdFile(String fullName)\nThis method generates a File object for documenting a Java class using a Markdown file. It transforms the full class name into a file path by replacing dots with slashes and adding the '.md' extension. The method returns the File object representing the Markdown file for the specified Java class. It relies on the java.io.File class for file handling.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/FileLookupHelper.java.javaFile.descr",
    "content2": "File javaFile(String fullName)\nThis method constructs a File object representing a Java source file based on the full class name provided. It converts the full class name into a file path by replacing dots with slashes and appending the '.java' extension. The method returns the File object corresponding to the Java source file. It is dependent on the java.io.File class for file operations."
  },
  {
    "similarity": 0.750061650064413,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addOptionalInputFile.descr",
    "content1": "AIGenerationTask addOptionalInputFile(File file)\nAdds an optional input file to the task. If the file exists, it is added to the list of input files for the task. This method takes a File object as a parameter and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.setOutputFile.descr",
    "content2": "AIGenerationTask setOutputFile(File file)\nSets the output file for the task. It specifies the file where the AI-generated output will be written. This method takes a File object representing the output file and returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.7473466395644814,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIInOut.java.of(File file).descr",
    "content1": "AIInOut of(File file)\nThis method creates an AIInOut instance that reads from the specified file. It returns a new AIFileInOut instance initialized with the provided file.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIInOut.java.of(SegmentedFile segmentedFile, int segmentIndex).descr",
    "content2": "AIInOut of(SegmentedFile segmentedFile, int segmentIndex)\nThis method creates an AIInOut instance that reads from a segment of a segmented file. It returns a new AIFileSegmentInOut instance initialized with the segmented file and segment index."
  },
  {
    "similarity": 0.7457079031045333,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputFile.descr",
    "content1": "AIGenerationTask addInputFile(File file)\nAdds an input file to the task. If the file exists, it is added to the list of input files for the task. This method takes a File object as a parameter and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addOptionalInput.descr",
    "content2": "AIGenerationTask addOptionalInput(AIInOut input)\nAdds an optional input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.745676359874788,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addOptionalInput.descr",
    "content1": "AIGenerationTask addOptionalInput(AIInOut input)\nAdds an optional input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputs.descr",
    "content2": "AIGenerationTask addInputs(List<AIInOut> inputs)\nAdds multiple AIInOut objects as inputs to the task. It iterates over the list of AIInOut objects and adds each input to the list of input files for the task. This method returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.7437362700874274,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInput.descr",
    "content1": "AIGenerationTask addInput(AIInOut input)\nAdds an input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputFiles.descr",
    "content2": "AIGenerationTask addInputFiles(List<File> files)\nAdds multiple input files to the task. It iterates over the list of File objects and adds each file to the list of input files for the task. This method returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.7421169330012903,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInput.descr",
    "content1": "AIGenerationTask addInput(AIInOut input)\nAdds an input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addHint.descr",
    "content2": "AIGenerationTask addHint(AIInOut hint)\nAdds a hint file to the task. The hint file provides additional information or guidance for the AI generation process. This method takes an AIInOut object representing the hint file and returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.739325684079225,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIInOut.java.of(InputStream in).descr",
    "content1": "AIInOut of(InputStream in)\nThis method creates an AIInOut instance that reads from the provided input stream. It returns a new AIStreamInOut instance initialized with the input stream.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIInOut.java.of(Path path).descr",
    "content2": "AIInOut of(Path path)\nThis method creates an AIInOut instance that reads from the specified file path. It returns a new AIFileInOut instance initialized with the file corresponding to the provided path."
  },
  {
    "similarity": 0.7340401405930733,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/CopyPseudoAIChatBuilderImpl.java.execute.descr",
    "content1": "String execute()\nThis method returns all the inputs of the AI chat builder as a string.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/CopyPseudoAIChatBuilderImpl.java.toJson.descr",
    "content2": "String toJson()\nThis method converts all the inputs of the AI chat builder to a JSON string."
  },
  {
    "similarity": 0.7289686993635324,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.setOutput.descr",
    "content1": "AIGenerationTask setOutput(AIInOut output)\nSets the output file for the task. It specifies the file where the AI-generated output will be written. This method takes an AIInOut object representing the output file and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addOptionalInput.descr",
    "content2": "AIGenerationTask addOptionalInput(AIInOut input)\nAdds an optional input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.7246010151721645,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/OpenAIChatBuilderImpl.java.toJson.descr",
    "content1": "String toJson()\nThis method converts the chat completion request object into a JSON string representation based on the API endpoint being used (OpenAI or Anthropic Claude). It handles the conversion of system prompts for Claude and filters out messages based on their roles. The method utilizes the Gson library for JSON serialization.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/CopyPseudoAIChatBuilderImpl.java.toJson.descr",
    "content2": "String toJson()\nThis method converts all the inputs of the AI chat builder to a JSON string."
  },
  {
    "similarity": 0.724118627510667,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputFiles.descr",
    "content1": "AIGenerationTask addInputFiles(List<File> files)\nAdds multiple input files to the task. It iterates over the list of File objects and adds each file to the list of input files for the task. This method returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addOptionalInputFile.descr",
    "content2": "AIGenerationTask addOptionalInputFile(File file)\nAdds an optional input file to the task. If the file exists, it is added to the list of input files for the task. This method takes a File object as a parameter and returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.7159180773354253,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInput.descr",
    "content1": "AIGenerationTask addInput(AIInOut input)\nAdds an input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addOptionalInputFile.descr",
    "content2": "AIGenerationTask addOptionalInputFile(File file)\nAdds an optional input file to the task. If the file exists, it is added to the list of input files for the task. This method takes a File object as a parameter and returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.7111283677905771,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputFile.descr",
    "content1": "AIGenerationTask addInputFile(File file)\nAdds an input file to the task. If the file exists, it is added to the list of input files for the task. This method takes a File object as a parameter and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputs.descr",
    "content2": "AIGenerationTask addInputs(List<AIInOut> inputs)\nAdds multiple AIInOut objects as inputs to the task. It iterates over the list of AIInOut objects and adds each input to the list of input files for the task. This method returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.7085378059738942,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addHint.descr",
    "content1": "AIGenerationTask addHint(AIInOut hint)\nAdds a hint file to the task. The hint file provides additional information or guidance for the AI generation process. This method takes an AIInOut object representing the hint file and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addOptionalInput.descr",
    "content2": "AIGenerationTask addOptionalInput(AIInOut input)\nAdds an optional input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.690940646382002,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.execute.descr",
    "content1": "public AIGenerationTask execute(@Nonnull Supplier<AIChatBuilder> chatBuilderFactory, @Nonnull File rootDirectory)\nExecutes the AI generation task. It triggers the AI chat generation process based on the task configuration and input files. This method takes a supplier of AIChatBuilder and a File representing the root directory, and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.toJson.descr",
    "content2": "public String toJson(@Nonnull Supplier<AIChatBuilder> chatBuilderFactory, @Nonnull File rootDirectory)\nGenerates JSON for the AI chat. It creates a JSON representation of the AI chat request that would be sent to the AI service. This method takes a supplier of AIChatBuilder and a File representing the root directory, and returns the JSON string."
  },
  {
    "similarity": 0.6834856933250953,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.userMsg.descr",
    "content1": "AIChatBuilder userMsg(String text)\nAdds a user message to the chat. This method inserts a user-generated message into the chat dialogue. User messages represent inputs or queries from the chat participant and drive the conversational flow. Including user messages enables dynamic interactions and personalized responses based on user input. User messages are fundamental for engaging and interactive chat experiences.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/CopyPseudoAIChatBuilderImpl.java.assistantMsg.descr",
    "content2": "AIChatBuilder assistantMsg(String text)\nThis method adds the assistant message text to the input of the AI chat builder. It appends the uncluttered version of the text to the existing inputs."
  },
  {
    "similarity": 0.680947922109704,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIInOut.java.of(SegmentedFile segmentedFile, int segmentIndex).descr",
    "content1": "AIInOut of(SegmentedFile segmentedFile, int segmentIndex)\nThis method creates an AIInOut instance that reads from a segment of a segmented file. It returns a new AIFileSegmentInOut instance initialized with the segmented file and segment index.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIInOut.java.of(Path path).descr",
    "content2": "AIInOut of(Path path)\nThis method creates an AIInOut instance that reads from the specified file path. It returns a new AIFileInOut instance initialized with the file corresponding to the provided path."
  },
  {
    "similarity": 0.6713532732175942,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addOptionalInput.descr",
    "content1": "AIGenerationTask addOptionalInput(AIInOut input)\nAdds an optional input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputFiles.descr",
    "content2": "AIGenerationTask addInputFiles(List<File> files)\nAdds multiple input files to the task. It iterates over the list of File objects and adds each file to the list of input files for the task. This method returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.6704114935878945,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addHint.descr",
    "content1": "AIGenerationTask addHint(AIInOut hint)\nAdds a hint file to the task. The hint file provides additional information or guidance for the AI generation process. This method takes an AIInOut object representing the hint file and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputs.descr",
    "content2": "AIGenerationTask addInputs(List<AIInOut> inputs)\nAdds multiple AIInOut objects as inputs to the task. It iterates over the list of AIInOut objects and adds each input to the list of input files for the task. This method returns the modified AIGenerationTask object."
  },
  {
    "similarity": 0.6697704100074748,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.execute.descr",
    "content1": "public AIGenerationTask execute(@Nonnull Supplier<AIChatBuilder> chatBuilderFactory, @Nonnull File rootDirectory)\nExecutes the AI generation task. It triggers the AI chat generation process based on the task configuration and input files. This method takes a supplier of AIChatBuilder and a File representing the root directory, and returns the modified AIGenerationTask object.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.explain.descr",
    "content2": "public String explain(@Nonnull Supplier<AIChatBuilder> chatBuilderFactory, @Nonnull File rootDirectory, @Nonnull String question)\nAsks a question about the previous task execution. It queries the AI about a specific aspect of the previous AI chat generation process. This method takes a supplier of AIChatBuilder, a File representing the root directory, and a String question, and returns the AI's response as a string."
  },
  {
    "similarity": 0.6655135449699385,
    "id1": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.systemMsg.descr",
    "content1": "AIChatBuilder systemMsg(String text)\nAdds a system message to the chat. This method includes a system-generated message in the chat interaction. System messages can provide context, instructions, or additional information to the user during the conversation. Incorporating system messages enhances the overall user experience and ensures effective communication within the chat environment.",
    "id2": "aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/CopyPseudoAIChatBuilderImpl.java.assistantMsg.descr",
    "content2": "AIChatBuilder assistantMsg(String text)\nThis method adds the assistant message text to the input of the AI chat builder. It appends the uncluttered version of the text to the existing inputs."
  }
]