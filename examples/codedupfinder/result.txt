### Similarity 0.9128468556421312:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/RegenerationCheckStrategy.java.needsRegeneration.descr:
boolean needsRegeneration(@Nonnull net.stoerr.ai.aigenpipeline.framework.task.AIInOut output, @Nonnull java.util.List<net.stoerr.ai.aigenpipeline.framework.task.AIInOut> inputs, @Nonnull net.stoerr.ai.aigenpipeline.framework.task.WritingStrategy writingStrategy, @Nonnull java.util.List<java.lang.String> inputVersions)
This method determines whether the output file needs to be regenerated based on the input files, writing strategy, and input versions. It checks various conditions such as file existence, modification time, and version markers to make the regeneration decision. The algorithm involves comparing file timestamps and input versions to determine if regeneration is necessary. This method processes output and input files, as well as input versions, and relies on the provided writing strategy for version marker handling.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/RegenerationCheckStrategy.java.VersionMarkerRegenerationCheckStrategy.descr:
boolean VersionMarkerRegenerationCheckStrategy.needsRegeneration(@Nonnull net.stoerr.ai.aigenpipeline.framework.task.AIInOut output, @Nonnull java.util.List<net.stoerr.ai.aigenpipeline.framework.task.AIInOut> inputs, @Nonnull net.stoerr.ai.aigenpipeline.framework.task.WritingStrategy writingStrategy, @Nonnull java.util.List<java.lang.String> inputVersions)
This method determines if the output file needs to be regenerated based on version markers. It compares the input versions recorded in the output file's version marker with the current input versions to decide on regeneration. The algorithm involves checking for differences in input versions to trigger regeneration. This method processes output and input files and relies on the provided writing strategy for version marker handling.


### Similarity 0.9093596199032645:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInput.descr:
AIGenerationTask addInput(AIInOut input)
Adds an input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addOptionalInput.descr:
AIGenerationTask addOptionalInput(AIInOut input)
Adds an optional input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object.


### Similarity 0.8914783117372288:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputFile.descr:
AIGenerationTask addInputFile(File file)
Adds an input file to the task. If the file exists, it is added to the list of input files for the task. This method takes a File object as a parameter and returns the modified AIGenerationTask object.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addOptionalInputFile.descr:
AIGenerationTask addOptionalInputFile(File file)
Adds an optional input file to the task. If the file exists, it is added to the list of input files for the task. This method takes a File object as a parameter and returns the modified AIGenerationTask object.


### Similarity 0.8530470119565317:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.assistantMsg.descr:
AIChatBuilder assistantMsg(String text)
Adds an assistant message to the chat. This method appends an assistant-generated message to the chat conversation. Assistant messages are responses generated by the AI model or chatbot to interact with the user. These messages provide answers, suggestions, or guidance within the chat context. Incorporating assistant messages facilitates natural and informative communication in the chat interaction.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/CopyPseudoAIChatBuilderImpl.java.assistantMsg.descr:
AIChatBuilder assistantMsg(String text)
This method adds the assistant message text to the input of the AI chat builder. It appends the uncluttered version of the text to the existing inputs.


### Similarity 0.8418774014743773:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/FileLookupHelper.java.filesContaining.descr:
List<File> filesContaining(String relpathDirectory, String filePathPattern, Pattern pattern, boolean recursive)
This method searches for files in the specified directory that contain a specific pattern in their content. It returns a list of files that match the given file path pattern and contain the specified regex pattern in their content. The method reads the content of each file and applies the regex pattern to determine if it matches. It skips files that exceed a certain size or are identified as binary files. The method relies on the java.util.regex.Pattern class for pattern matching.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/FileLookupHelper.java.files.descr:
List<File> files(String relpathDirectory, String filePathPattern, boolean recursive)
This method retrieves a list of files based on the provided directory path, file path pattern, and recursion flag. It searches for files matching the given pattern in the specified directory and its subdirectories. The method returns a list of File objects that match the criteria. It utilizes the PathMatcher to match file paths based on the provided pattern. The method has dependencies on the java.io.File, java.nio.file.Path, and java.nio.file.PathMatcher classes.


### Similarity 0.8402933472007568:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIInOut.java.of(File file).descr:
AIInOut of(File file)
This method creates an AIInOut instance that reads from the specified file. It returns a new AIFileInOut instance initialized with the provided file.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIInOut.java.of(Path path).descr:
AIInOut of(Path path)
This method creates an AIInOut instance that reads from the specified file path. It returns a new AIFileInOut instance initialized with the file corresponding to the provided path.


### Similarity 0.8393687281898029:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.setOutput.descr:
AIGenerationTask setOutput(AIInOut output)
Sets the output file for the task. It specifies the file where the AI-generated output will be written. This method takes an AIInOut object representing the output file and returns the modified AIGenerationTask object.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.setOutputFile.descr:
AIGenerationTask setOutputFile(File file)
Sets the output file for the task. It specifies the file where the AI-generated output will be written. This method takes a File object representing the output file and returns the modified AIGenerationTask object.


### Similarity 0.8380722398839131:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/RegenerationCheckStrategy.java.needsRegeneration.descr:
boolean needsRegeneration(@Nonnull net.stoerr.ai.aigenpipeline.framework.task.AIInOut output, @Nonnull java.util.List<net.stoerr.ai.aigenpipeline.framework.task.AIInOut> inputs, @Nonnull net.stoerr.ai.aigenpipeline.framework.task.WritingStrategy writingStrategy, @Nonnull java.util.List<java.lang.String> inputVersions)
This method determines whether the output file needs to be regenerated based on the input files, writing strategy, and input versions. It checks various conditions such as file existence, modification time, and version markers to make the regeneration decision. The algorithm involves comparing file timestamps and input versions to determine if regeneration is necessary. This method processes output and input files, as well as input versions, and relies on the provided writing strategy for version marker handling.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/RegenerationCheckStrategy.java.IF_OLDER.descr:
boolean IF_OLDER(@Nonnull net.stoerr.ai.aigenpipeline.framework.task.AIInOut output, @Nonnull java.util.List<net.stoerr.ai.aigenpipeline.framework.task.AIInOut> inputs, @Nonnull net.stoerr.ai.aigenpipeline.framework.task.WritingStrategy writingStrategy, @Nonnull java.util.List<java.lang.String> inputVersions)
This method checks if the output file needs to be regenerated by comparing the modification timestamps of the output file and input files. It evaluates whether the output file is older than any of the input files, indicating a need for regeneration. The algorithm involves iterating over input files and comparing their timestamps with the output file's timestamp. This method processes output and input files and relies on the provided writing strategy for handling file timestamps.


### Similarity 0.830339071744579:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputFile.descr:
AIGenerationTask addInputFile(File file)
Adds an input file to the task. If the file exists, it is added to the list of input files for the task. This method takes a File object as a parameter and returns the modified AIGenerationTask object.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputFiles.descr:
AIGenerationTask addInputFiles(List<File> files)
Adds multiple input files to the task. It iterates over the list of File objects and adds each file to the list of input files for the task. This method returns the modified AIGenerationTask object.


### Similarity 0.8298293590252928:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInput.descr:
AIGenerationTask addInput(AIInOut input)
Adds an input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputs.descr:
AIGenerationTask addInputs(List<AIInOut> inputs)
Adds multiple AIInOut objects as inputs to the task. It iterates over the list of AIInOut objects and adds each input to the list of input files for the task. This method returns the modified AIGenerationTask object.


### Similarity 0.82405114231583:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addOptionalInput.descr:
AIGenerationTask addOptionalInput(AIInOut input)
Adds an optional input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addOptionalInputFile.descr:
AIGenerationTask addOptionalInputFile(File file)
Adds an optional input file to the task. If the file exists, it is added to the list of input files for the task. This method takes a File object as a parameter and returns the modified AIGenerationTask object.


### Similarity 0.8237494948717475:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/OpenAIChatBuilderImpl.java.toJson.descr:
String toJson()
This method converts the chat completion request object into a JSON string representation based on the API endpoint being used (OpenAI or Anthropic Claude). It handles the conversion of system prompts for Claude and filters out messages based on their roles. The method utilizes the Gson library for JSON serialization.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.toJson.descr:
String toJson()
Converts the chat completion request to a JSON string. This method serializes the chat completion request into a JSON-formatted string representation. Converting the request to JSON format enables data interchange and compatibility with various systems and services. The JSON output encapsulates the chat parameters and content in a structured format for seamless transmission and processing.


### Similarity 0.8139312906477276:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInput.descr:
AIGenerationTask addInput(AIInOut input)
Adds an input file to the task. If the input file exists, it is added to the list of input files for the task. This method takes an AIInOut object as a parameter and returns the modified AIGenerationTask object.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputFile.descr:
AIGenerationTask addInputFile(File file)
Adds an input file to the task. If the file exists, it is added to the list of input files for the task. This method takes a File object as a parameter and returns the modified AIGenerationTask object.


### Similarity 0.809622136620688:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.setRegenerationCheckStrategy.descr:
AIGenerationTask setRegenerationCheckStrategy(RegenerationCheckStrategy strategy)
Sets the strategy for checking if regeneration is required. It defines the method to determine whether the AI generation task needs to be rerun based on input file versions and other criteria. This method takes a RegenerationCheckStrategy object as a parameter and returns the modified AIGenerationTask object.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.setWritingStrategy.descr:
AIGenerationTask setWritingStrategy(WritingStrategy strategy)
Sets the strategy for writing the output file. It defines how the AI-generated output should be written to the output file. This method takes a WritingStrategy object as a parameter and returns the modified AIGenerationTask object.


### Similarity 0.808709774802646:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.systemMsg.descr:
AIChatBuilder systemMsg(String text)
Adds a system message to the chat. This method includes a system-generated message in the chat interaction. System messages can provide context, instructions, or additional information to the user during the conversation. Incorporating system messages enhances the overall user experience and ensures effective communication within the chat environment.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.userMsg.descr:
AIChatBuilder userMsg(String text)
Adds a user message to the chat. This method inserts a user-generated message into the chat dialogue. User messages represent inputs or queries from the chat participant and drive the conversational flow. Including user messages enables dynamic interactions and personalized responses based on user input. User messages are fundamental for engaging and interactive chat experiences.


### Similarity 0.8001361362682964:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/OpenAIChatBuilderImpl.java.execute.descr:
String execute()
This method executes the chat completion request by sending a HTTP POST request to the specified URL with the JSON representation of the chat completion request. It handles different API endpoints based on the URL provided, sets appropriate headers including authorization, organization ID, and content type, and processes the response to extract the completed chat content. The method relies on the HttpClient class for making HTTP requests and the Gson library for JSON serialization and deserialization.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.execute.descr:
String execute()
Executes the chat completion request and returns the response. This method triggers the execution of the chat completion request and retrieves the resulting response. Executing the request initiates the chat processing pipeline, which generates and delivers the chat completion output. The method returns the response generated by the chat completion service, reflecting the AI-generated conversation or interaction.


### Similarity 0.799127303196063:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputFile.descr:
AIGenerationTask addInputFile(File file)
Adds an input file to the task. If the file exists, it is added to the list of input files for the task. This method takes a File object as a parameter and returns the modified AIGenerationTask object.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.setOutputFile.descr:
AIGenerationTask setOutputFile(File file)
Sets the output file for the task. It specifies the file where the AI-generated output will be written. This method takes a File object representing the output file and returns the modified AIGenerationTask object.


### Similarity 0.7981437391246242:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/CopyPseudoAIChatBuilderImpl.java.model.descr:
AIChatBuilder model(String model)
This method sets the model for the AI chat builder. It only supports the 'copy' model. If a different model is provided, an IllegalArgumentException is thrown.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/chat/AIChatBuilder.java.model.descr:
AIChatBuilder model(String model)
Sets the AI model to be used for the chat completion. This method selects the AI model to be employed during the chat completion process. The chosen model influences the language generation, response accuracy, and overall conversational quality. Selecting the appropriate AI model is essential for tailoring the chat interactions to specific use cases and optimizing performance.


### Similarity 0.7912343947965476:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputs.descr:
AIGenerationTask addInputs(List<AIInOut> inputs)
Adds multiple AIInOut objects as inputs to the task. It iterates over the list of AIInOut objects and adds each input to the list of input files for the task. This method returns the modified AIGenerationTask object.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIGenerationTask.java.addInputFiles.descr:
AIGenerationTask addInputFiles(List<File> files)
Adds multiple input files to the task. It iterates over the list of File objects and adds each file to the list of input files for the task. This method returns the modified AIGenerationTask object.


### Similarity 0.781091530783031:
=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIInOut.java.of(File file).descr:
AIInOut of(File file)
This method creates an AIInOut instance that reads from the specified file. It returns a new AIFileInOut instance initialized with the provided file.

=== aigenpipeline-framework/src/main/java/net/stoerr/ai/aigenpipeline/framework/task/AIInOut.java.of(InputStream in).descr:
AIInOut of(InputStream in)
This method creates an AIInOut instance that reads from the provided input stream. It returns a new AIStreamInOut instance initialized with the input stream.


